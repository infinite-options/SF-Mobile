using System;
using System.Collections.Generic;

using Xamarin.Forms;
using Xamarin.Forms.Maps;
using static ServingFresh.Views.SelectionPage;
using static ServingFresh.Views.CheckoutPage;
using static ServingFresh.Views.SignUpPage;

namespace ServingFresh.Views
{
    public partial class ConfirmationPage : ContentPage
    {
        public ConfirmationPage()
        {
            InitializeComponent();
            SelectionPage.SetMenu(guestMenuSection, customerMenuSection, historyLabel, profileLabel);
            cartItemsNumber.Text = purchase.getPurchaseItems().Count.ToString();
            contactMessage.Text = "If we have question. We will contact you at " + purchase.getPurchaseEmail() + " or " + purchase.getPurchasePhoneNumber();
            expectedDeliveryMessage.Text = "Your order will be delivered on: " + selectedDeliveryDate.deliveryTimeStamp.ToString("dddd, MMM dd, yyyy");
            PlaceLocationOnMap(double.Parse(purchase.getPurchaseLatitude()), double.Parse(purchase.getPurchaseLongitude()));
            ShowAutoGenereatedCredentials(purchase.getPurchaseEmail(), GetAutoGeneratedPasswordFrom(purchase.getPurchaseFirstName().Trim(), purchase.getPurchaseAddress().Trim()));
        }

        void PlaceLocationOnMap(double latitude, double longitude)
        {
            Position position = new Position(latitude, longitude);
            map.MapType = MapType.Street;
            var mapSpan = new MapSpan(position, 0.001, 0.001);
            Pin address = new Pin();
            address.Label = "Delivery Address";
            address.Type = PinType.SearchResult;
            address.Position = position;
            map.MoveToRegion(mapSpan);
            map.Pins.Add(address);
        }

        async void ShowAutoGenereatedCredentials(string userName, string tempPassword)
        {
            await DisplayAlert("Thank you for your purchase!", "Remeber you can access new features like rewards, history, and more by using the following credentials: ("+ userName+ ", " + tempPassword + ") ", "OK");
        }

        void ReturnToStore(System.Object sender, System.EventArgs e)
        {
            Application.Current.MainPage = new SelectionPage();
        }

        void SignIn(System.Object sender, System.EventArgs e)
        {
            Application.Current.MainPage = new LogInPage();
        }

        void ShowMenuFromConfirmation(System.Object sender, System.EventArgs e)
        {
            var height = new GridLength(0);
            if (menuFrame.Height.Equals(height))
            {
                menuFrame.Height = this.Height - 180;
            }
            else
            {
                menuFrame.Height = 0;
            }
        }

        void NavigateToCartFromConfirmation(System.Object sender, System.EventArgs e)
        {
            NavigateToCart(sender, e);
        }

        void NavigateToStoreFromConfirmation(System.Object sender, System.EventArgs e)
        {
            NavigateToStore(sender, e);
        }

        void NavigateToHistoryFromConfirmation(System.Object sender, System.EventArgs e)
        {
            NavigateToHistory(sender, e);
        }

        void NavigateToRefudsFromConfirmation(System.Object sender, System.EventArgs e)
        {
            NavigateToRefunds(sender, e);
        }

        void NavigateToInfoFromConfirmation(System.Object sender, System.EventArgs e)
        {
            NavigateToInfo(sender, e);
        }

        void NavigateToProfileFromConfirmation(System.Object sender, System.EventArgs e)
        {
            NavigateToProfile(sender, e);
        }

        void NavigateToSignInFromConfirmation(System.Object sender, System.EventArgs e)
        {
            NavigateToSignIn(sender, e);
        }

        void NavigateToSignUpFromConfirmation(System.Object sender, System.EventArgs e)
        {
            NavigateToSignUp(sender, e);
        }

        void NavigateToMainFromConfirmation(System.Object sender, System.EventArgs e)
        {
            NavigateToMain(sender, e);
        }
    }  
}
